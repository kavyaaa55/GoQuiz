generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  name            String
  image           String?
  email           String           @unique
  quizSubmissions QuizSubmission[]
  userAnswers     UserAnswer[] // ðŸ‘ˆ back-relation to UserAnswer
}

model Quiz {
  id              Int              @id @default(autoincrement())
  title           String
  createdAt       DateTime         @default(now())
  topic           String
  questions       Question[]
  quizSubmissions QuizSubmission[]
}

model QuizSubmission {
  id        Int      @id @default(autoincrement())
  score     Int
  points    Int?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  quizId    Int
  createdAt DateTime @default(now())

  @@unique([userId, quizId])
}

model Question {
  id          Int          @id @default(autoincrement())
  text        String
  answer      String
  options     Option[]
  quiz        Quiz         @relation(fields: [quizId], references: [id])
  quizId      Int
  topic       String
  difficulty  Int
  userAnswers UserAnswer[] // ðŸ‘ˆ back-relation to UserAnswer
}

model Option {
  id          Int          @id @default(autoincrement())
  text        String
  question    Question     @relation(fields: [questionId], references: [id])
  questionId  Int
  userAnswers UserAnswer[] // ðŸ‘ˆ back-relation to UserAnswer
}

model UserAnswer {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  option     Option   @relation(fields: [optionId], references: [id])
  optionId   Int
  time       Int

  @@unique([userId, questionId])
}
